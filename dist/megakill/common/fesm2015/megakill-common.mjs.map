{"version":3,"file":"megakill-common.mjs","sources":["../../../../projects/megakill/common/src/lib/injection-tokens.ts","../../../../projects/megakill/common/src/lib/select-portal-dialog/select-portal-dialog.component.ts","../../../../projects/megakill/common/src/lib/select-portal-dialog/select-portal-dialog.component.html","../../../../projects/megakill/common/src/lib/ok-dialog/ok-dialog.component.ts","../../../../projects/megakill/common/src/lib/ok-dialog/ok-dialog.component.html","../../../../projects/megakill/common/src/lib/ok-portal-dialog/ok-portal-dialog.component.ts","../../../../projects/megakill/common/src/lib/ok-portal-dialog/ok-portal-dialog.component.html","../../../../projects/megakill/common/src/lib/dialog.service.ts","../../../../projects/megakill/common/src/lib/formatter.service.ts","../../../../projects/megakill/common/src/lib/config.ts","../../../../projects/megakill/common/src/lib/local-files.service.ts","../../../../projects/megakill/common/src/lib/csv.service.ts","../../../../projects/megakill/common/src/lib/s3.service.ts","../../../../projects/megakill/common/src/lib/common.module.ts","../../../../projects/megakill/common/src/lib/ro-date-formats.constant.ts","../../../../projects/megakill/common/src/lib/ag-grid-locale-text-ro.constant.ts","../../../../projects/megakill/common/src/lib/auth.service.ts","../../../../projects/megakill/common/src/lib/auth/callback/callback.component.ts","../../../../projects/megakill/common/src/lib/auth/callback/callback.component.html","../../../../projects/megakill/common/src/lib/auth.guard.ts","../../../../projects/megakill/common/src/lib/renderers/actions-renderer/actions-renderer.component.ts","../../../../projects/megakill/common/src/lib/renderers/actions-renderer/actions-renderer.component.html","../../../../projects/megakill/common/src/lib/renderers/boolean-renderer/boolean-renderer.component.ts","../../../../projects/megakill/common/src/lib/renderers/boolean-renderer/boolean-renderer.component.html","../../../../projects/megakill/common/src/lib/renderers/download-renderer/download-renderer.component.ts","../../../../projects/megakill/common/src/lib/renderers/download-renderer/download-renderer.component.html","../../../../projects/megakill/common/src/lib/renderers/local-download-renderer/local-download-renderer.component.ts","../../../../projects/megakill/common/src/lib/renderers/local-download-renderer/local-download-renderer.component.html","../../../../projects/megakill/common/src/lib/renderers/local-photo-renderer/local-photo-renderer.component.ts","../../../../projects/megakill/common/src/lib/renderers/local-photo-renderer/local-photo-renderer.component.html","../../../../projects/megakill/common/src/lib/renderers/s3-download-renderer/s3-download-renderer.component.ts","../../../../projects/megakill/common/src/lib/renderers/s3-download-renderer/s3-download-renderer.component.html","../../../../projects/megakill/common/src/lib/renderers/s3-photo-renderer/s3-photo-renderer.component.ts","../../../../projects/megakill/common/src/lib/renderers/s3-photo-renderer/s3-photo-renderer.component.html","../../../../projects/megakill/common/src/public-api.ts","../../../../projects/megakill/common/src/megakill-common.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nexport const CONTAINER_DATA = new InjectionToken<{}>('CONTAINER_DATA', { providedIn: 'root', factory: () => ({}) });","import { Component, OnInit, Inject, Injector } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ComponentPortal, ComponentType, PortalInjector } from '@angular/cdk/portal';\n\nimport { CONTAINER_DATA } from '../injection-tokens';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'megakill-select-portal-dialog',\n  templateUrl: './select-portal-dialog.component.html'\n})\nexport class SelectPortalDialogComponent implements OnInit {\n\n  title = '';\n  component: ComponentType<any>;\n  componentData = null;\n  componentPortal: ComponentPortal<any>;\n  eventSelectedRow: Subscription;\n  selectedRow: any;\n\n  constructor(\n    private injector: Injector,\n    public dialogRef: MatDialogRef<SelectPortalDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    if (data && data.title) {\n      this.title = data.title;\n    }\n\n    if (!data || !data.component) {\n      throw new Error('SelectDialog: data.component is undefined');\n    }\n\n    this.component = data.component;\n\n    if (!data.componentData) {\n      throw new Error('SelectDialog: data.component.componentData is undefined');\n    }\n\n    this.componentData = data.componentData;\n\n    this.componentPortal = new ComponentPortal(\n      this.component,\n      null,\n      this.createInjector(this.componentData)\n    );\n  }\n\n  createInjector(dataToPass: any): PortalInjector {\n    const injectorTokens = new WeakMap();\n    injectorTokens.set(CONTAINER_DATA, dataToPass);\n    return new PortalInjector(this.injector, injectorTokens);\n  }\n\n  ngOnInit() { }\n\n  onPortalAttached(event: any) {\n    console.log(event.instance.selectedRow) \n    console.log(event)\n    this.eventSelectedRow = event.instance.selectedRow.subscribe((row: any) => {\n      console.log(row)\n      this.selectedRow = row\n      console.log(\"SelectPortalDialogComponent -> onPortalAttached -> this.selectedRow\", this.selectedRow)\n    })\n  }\n\n  getSelectedRowAfterClose() {\n    this.dialogRef.close(this.selectedRow);\n    console.log(\"SelectPortalDialogComponent -> getSelectedRowAfterClose -> this.dialogRef.close(this.selectedRow);\", this.selectedRow)\n  }\n}\n","<h1 mat-dialog-title>{{title}}</h1>\n<div mat-dialog-content style=\"height: 100%\">\n        <ng-template [cdkPortalOutlet]=\"componentPortal\" (attached)=\"onPortalAttached($event)\"></ng-template>\n</div>\n<div mat-dialog-actions align=\"end\">\n        <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial>ANULEAZĂ</button>\n        <button mat-raised-button [mat-dialog-close]=\"true\" cdkFocusInitial color=\"primary\" (click)=\"getSelectedRowAfterClose()\">SELECTEAZĂ</button>\n</div>\n","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'megakill-ok-dialog',\n  templateUrl: './ok-dialog.component.html'\n})\n\nexport class OkDialogComponent implements OnInit {\n  title = '';\n  message = '';\n\n  constructor(\n    public dialogRef: MatDialogRef<OkDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    if (data && data.title) {\n      this.title = data.title;\n    }\n\n    if (data && data.message) {\n      this.message = data.message;\n    }\n  }\n\n  ngOnInit() { }\n}\n","<h1 mat-dialog-title>{{title}}</h1>\n<div mat-dialog-content>\n        <p>{{message}}</p>\n</div>\n<div mat-dialog-actions align=\"end\">\n        <button mat-button mat-dialog-close=\"true\" cdkFocusInitial color=\"primary\">OK</button>\n</div>","import { Component, OnInit, Inject, InjectionToken, Injector } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ComponentPortal, ComponentType, PortalInjector } from '@angular/cdk/portal';\n\nimport { CONTAINER_DATA } from '../injection-tokens';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'megakill-ok-portal-dialog',\n  templateUrl: './ok-portal-dialog.component.html'\n})\n\nexport class OkPortalDialogComponent implements OnInit {\n  title = '';\n  component: ComponentType<any>;\n  componentData = null;\n  componentPortal: ComponentPortal<any>;\n  eventSelectedRow: Subscription;\n\n  constructor(\n    private injector: Injector,\n    public dialogRef: MatDialogRef<OkPortalDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {\n    if (data && data.title) {\n      this.title = data.title;\n    }\n\n    if (!data || !data.component) {\n      throw new Error('OkDialog: data.component is undefined');\n    }\n\n    this.component = data.component;\n\n    if (!data.componentData) {\n      throw new Error('OkDialog: data.component.componentData is undefined');\n    }\n\n    this.componentData = data.componentData;\n\n    this.componentPortal = new ComponentPortal(\n      this.component,\n      null,\n      this.createInjector(this.componentData)\n    );\n  }\n\n  createInjector(dataToPass: any): PortalInjector {\n    const injectorTokens = new WeakMap();\n    injectorTokens.set(CONTAINER_DATA, dataToPass);\n    return new PortalInjector(this.injector, injectorTokens);\n  }\n\n  ngOnInit() { }\n\n  onPortalAttached(event: any) {\n    console.log(event.instance.selectedRow) \n    console.log(event)\n    this.eventSelectedRow = event.instance.selectedRow.subscribe((el: any) => {\n      console.log(el);\n    });\n  }\n}\n","<h1 mat-dialog-title>{{title}}</h1>\n<div mat-dialog-content style=\"height: 100%\">\n        <ng-template [cdkPortalOutlet]=\"componentPortal\" (attached)=\"onPortalAttached($event)\"></ng-template>\n</div>\n<div mat-dialog-actions align=\"end\">\n        <button mat-button [mat-dialog-close]=\"true\" cdkFocusInitial color=\"primary\">OK</button>\n</div>","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { SelectPortalDialogComponent } from './select-portal-dialog/select-portal-dialog.component';\nimport { OkDialogComponent } from './ok-dialog/ok-dialog.component';\nimport { OkPortalDialogComponent } from './ok-portal-dialog/ok-portal-dialog.component';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  constructor(public dialog: MatDialog) { }\n\n  openOkDialog(data: any) {\n    return this.dialog.open(OkDialogComponent, { data });\n  }\n\n  openOkPortalDialog(data: any) {\n    return this.dialog.open(OkPortalDialogComponent, { data, width: '90vw', maxWidth: '90vw', height: '80vh' });\n  }\n\n  openSelectPortalDialog(data: any) {\n    return this.dialog.open(SelectPortalDialogComponent, { data, width: '90vw', maxWidth: '90vw', height: '80vh' });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport * as moment from 'moment-timezone';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FormatterService {\n\n  constructor() { }\n\n  dateFormatter(params: any) {\n    if (!params.value) return params.value;\n    return moment(params.value).tz('Europe/Bucharest').format('DD.MM.YYYY');\n  }\n\n  dateTimeFormatter(params: any) {\n    if (!params.value) return params.value;\n    return moment(params.value).tz('Europe/Bucharest').format('DD.MM.YYYY HH:mm:ss');\n  }\n\n  dateTimeHHmmFormatter(params: any) {\n    if (!params.value) return params.value;\n    return moment(params.value).tz('Europe/Bucharest').format('DD.MM.YYYY HH:mm');\n  }\n\n  historyOperationFormatter(params: any) {\n    if (!params.value) return params.value;\n    if (params.value.includes('insert')) return `Adăugare`;\n    if (params.value.includes('update')) return `Actualizare`;\n    if (params.value.includes('delete')) return `Ștergere`;\n    return params.value;\n  }\n\n  appointmentFormatter(params: any) {\n    if (!params.value) return params.value;\n    return moment(params.value.startDate).tz('Europe/Bucharest').format('DD.MM.YYYY HH:mm');\n  }\n}\n","export class MegakillCommonModuleConfig {\n\tenvironment: any;\n\tauth: any;\n  }\n\nexport function getBaseUrl(config?: MegakillCommonModuleConfig) {\n\tif (!config?.environment?.baseUrl) {\n\t\tconsole.warn('No baseUrl provided in MegakillCommonModuleConfig. Register the module as MegakillCommonModule.forRoot({ environment }), where environment has the property baseUrl.')\n\t  }\n\t  return config?.environment?.baseUrl;\n}\n","import { Injectable, Optional } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { getBaseUrl, MegakillCommonModuleConfig } from './config';\nimport { saveAs } from 'file-saver';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalFilesService {\n  baseUrl;\n\n  constructor(\n    private http: HttpClient,\n    @Optional() config?: MegakillCommonModuleConfig\n  ) {\n    this.baseUrl = getBaseUrl(config) + '/local-files/';\n  }\n\n  upload(formData: any) {\n    return this.http.post(this.baseUrl + 'upload', formData).toPromise();\n  }\n\n  download(filePath: string) {\n    const linkParts = filePath.split('/');\n    const filename = linkParts[linkParts.length - 1];\n    \n    return this.http.get(this.baseUrl + 'download?filePath=' + filePath, { responseType: 'arraybuffer' }).toPromise().then((res) => {\n      const arrayBuffer = res as ArrayBuffer;\n      const blob = new Blob([arrayBuffer]);\n      saveAs(blob, filename)\n      return res;\n    });\n  }\n}\n","import { getBaseUrl, MegakillCommonModuleConfig } from './config';\nimport { Injectable, Optional } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n\nexport class CsvService {\n\tbaseUrl;\n\n\tconstructor(\n\t\tprivate http: HttpClient,\n\t\t@Optional() config?: MegakillCommonModuleConfig\n\t) {\n\t\tthis.baseUrl = getBaseUrl(config) + '/local-files/';\n\t}\n\n\tcsvToXlsx(csv: any = {}) {\n\t\treturn this.http.post(this.baseUrl + 'csv-to-xlsx', { csv }, { responseType: 'arraybuffer' }).toPromise();\n\t}\n\n\tcsvToHtml(csv: any = {}) {\n\t\treturn this.http.post(this.baseUrl + 'csv-to-html', { csv }, { responseType: 'arraybuffer' }).toPromise();\n\t}\n\n\tcsvToPdf(csv: any = {}) {\n\t\treturn this.http.post(this.baseUrl + 'csv-to-pdf', { csv }, { responseType: 'arraybuffer' }).toPromise();\n\t}\n\n\tcsvToJson(csv: any = {}) {\n\t\treturn this.http.post(this.baseUrl + 'csv-to-json', { csv }, { responseType: 'arraybuffer' }).toPromise();\n\t}\n}","import { Injectable, Optional } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { saveAs } from 'file-saver';\nimport { getBaseUrl, MegakillCommonModuleConfig } from './config';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class S3Service {\n  baseUrl;\n  constructor(\n    private http: HttpClient,\n    @Optional() config?: MegakillCommonModuleConfig\n  ) {\n    this.baseUrl = getBaseUrl(config) + '/local-files/';\n  }\n\n  async download(link: string) {\n    const linkParts = link.split('/');\n    const filename = linkParts[linkParts.length - 1];\n    \n    return this.http.get(this.baseUrl + 'download?link=' + link, { responseType: 'arraybuffer' }).toPromise().then((res) => {\n      const arrayBuffer = res as ArrayBuffer;\n      const blob = new Blob([arrayBuffer]);\n      saveAs(blob, filename)\n      return res;\n    });\n  }\n\n  async upload(formData: FormData) {\n    return this.http.post(this.baseUrl + 'upload', formData).toPromise();\n  }\n}\n","import { OkPortalDialogComponent } from './ok-portal-dialog/ok-portal-dialog.component';\nimport { SelectPortalDialogComponent } from './select-portal-dialog/select-portal-dialog.component';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MegakillCommonModuleConfig } from './config';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatDialogModule } from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [\n    OkPortalDialogComponent,\n    SelectPortalDialogComponent\n  ],\n  imports: [\n    MatIconModule,\n    MatDialogModule\n  ],\n  exports: [\n  ]\n})\n\nexport class MegakillCommonModule {\n  static forRoot(config: MegakillCommonModuleConfig): ModuleWithProviders<MegakillCommonModule> {\n    return {\n      ngModule: MegakillCommonModule,\n      providers: [\n        { provide: MegakillCommonModuleConfig, useValue: config }\n      ]\n    };\n  }\n}\n","export const RO_DATE_FORMATS = {\n\tparse: {\n\t\tdateInput: 'DD.MM.YYYY',\n\t},\n\tdisplay: {\n\t\tdateInput: 'DD.MM.YYYY',\n\t\tmonthYearLabel: 'MM.YYYY',\n\t\tdateA11yLabel: 'DD.MM.YYYY',\n\t\tmonthYearA11yLabel: 'MM.YYYY',\n\t},\n};","export const AG_GRID_LOCALE_TEXT_RO = {\n    // for filter panel\n    page: 'Pagina',\n    more: 'Mai mult',\n    to: 'la',\n    of: 'din',\n    next: 'Următoarea',\n    last: 'Ultima',\n    first: 'Prima',\n    previous: 'Precedenta',\n    loadingOoo: 'Se încarcă...',\n\n    // for set filter\n    selectAll: 'Selectează tot',\n    searchOoo: 'Caută...',\n    blanks: 'Goale',\n\n    // for number filter and text filter\n    filterOoo: 'Filtrează...',\n    applyFilter: 'Aplică filtru...',\n    equals: 'Egal',\n    notEqual: 'Diferit',\n\n    // for number filter\n    lessThan: 'Mai mic ca',\n    greaterThan: 'Mai mare ca',\n    lessThanOrEqual: 'Mai mic sau egal',\n    greaterThanOrEqual: 'Mai mare sau egal',\n    inRange: 'Între',\n\n    // for text filter\n    contains: 'Conține',\n    notContains: 'Nu conține',\n    startsWith: 'Începe cu',\n    endsWith: 'Se termină cu',\n\n    // filter conditions\n    andCondition: 'Și',\n    orCondition: 'Sau',\n\n    // the header of the default group column\n    group: 'Grup',\n\n    // tool panel\n    columns: 'Coloane',\n    filters: 'Filtre',\n    rowGroupColumns: 'Coloane pivot',\n    rowGroupColumnsEmptyMessage: 'Trage coloanele în grup',\n    valueColumns: 'Coloane cu valori',\n    pivotMode: 'Mod pivot',\n    groups: 'Grupuri',\n    values: 'Valori',\n    pivots: 'Pivoți',\n    valueColumnsEmptyMessage: 'Trage coloanele pentru agregare',\n    pivotColumnsEmptyMessage: 'Trage coloanele pentru pivotare',\n    toolPanelButton: 'Unelte',\n\n    // other\n    noRowsToShow: 'Nicio intrare.',\n\n    // enterprise menu\n    pinColumn: 'Pin-uiește coloana',\n    valueAggregation: 'Agregare valorică',\n    autosizeThiscolumn: 'Auto-dimensionează această coloana',\n    autosizeAllColumns: 'Auto-dimensionează toate coloanele',\n    groupBy: 'Grupeaza după',\n    ungroupBy: 'Negrupează după',\n    resetColumns: 'Resetează coloanele',\n    expandAll: 'Expandează',\n    collapseAll: 'Contractă',\n    toolPanel: 'Unelte',\n    export: 'Exportă',\n    csvExport: 'Export CSV',\n    excelExport: 'Export Excel (.xlsx)',\n    excelXmlExport: 'Export Excel (.xml)',\n\n    // enterprise menu (charts)\n    pivotChartAndPivotMode: 'Grafic Pivot & Mod Pivot',\n    pivotChart: 'Grafic pivot',\n    chartRange: 'Rază grafic',\n\n    columnChart: 'Coloană',\n    groupedColumn: 'Grupat',\n    stackedColumn: 'Stivuit',\n    normalizedColumn: 'Stivuit 100%',\n\n    barChart: 'Bare',\n    groupedBar: 'Bare grupate',\n    stackedBar: 'Bare stivuite',\n    normalizedBar: 'Bare stivuite 100%',\n\n    pieChart: 'Plăcintă',\n    pie: 'Plăcintă',\n    doughnut: 'Gogoașă',\n\n    line: 'Linie',\n\n    xyChart: 'X Y (Dispersat)',\n    scatter: 'Dispersat',\n    bubble: 'Bule',\n\n    areaChart: 'Suprafață',\n    area: 'Suprafață',\n    stackedArea: 'Suprafață stivuit',\n    normalizedArea: 'Suprafață stivuit 100%',\n\n    // enterprise menu pinning\n    pinLeft: 'Pin la stânga <<',\n    pinRight: 'Pin la dreapta >>',\n    noPin: 'Fără pin <>',\n\n    // enterprise menu aggregation and status bar\n    sum: 'Sumă',\n    min: 'Minim',\n    max: 'Maxim',\n    none: 'Niciunul',\n    count: 'Nr. intrări',\n    average: 'Medie',\n    filteredRows: 'Filtrate',\n    selectedRows: 'Selectate',\n    totalRows: 'Nr. total intrări',\n    totalAndFilteredRows: 'intrări',\n\n    // standard menu\n    copy: 'Copiază',\n    copyWithHeaders: 'Copiază cu capete de tabel',\n    ctrlC: 'Ctrl + C',\n    paste: 'Lipește',\n    ctrlV: 'Ctrl + V',\n\n    // charts\n    pivotChartTitle: 'Grafic pivot',\n    rangeChartTitle: 'Grafic rază',\n    settings: 'Setări',\n    data: 'Date',\n    format: 'Format',\n    categories: 'Categorii',\n    series: 'Serii',\n    axis: 'Axă',\n    color: 'Culoare',\n    thickness: 'Grosime',\n    xRotation: 'Rotație X',\n    yRotation: 'Rotație Y',\n    ticks: 'Ticks',\n    width: 'Lățime',\n    length: 'Lungime',\n    padding: 'Padding',\n    chart: 'Grafic',\n    title: 'Titlu',\n    font: 'Font',\n    top: 'Sus',\n    right: 'Dreapta',\n    bottom: 'Jos',\n    left: 'Stânga',\n    labels: 'Nume',\n    size: 'Mărime',\n    legend: 'Legendă',\n    position: 'Poziție',\n    markerSize: 'Mărime marker',\n    markerStroke: 'Contur marker',\n    markerPadding: 'Padding marker',\n    itemPaddingX: 'Padding Item X',\n    itemPaddingY: 'Padding Item Y',\n    strokeWidth: 'Lățime contur',\n    offset: 'Offset',\n    tooltips: 'Tooltip-uri',\n    offsets: 'Offset-uri',\n    callout: 'Callout',\n    markers: 'Markere',\n    shadow: 'Umbră',\n    blur: 'Blur',\n    xOffset: 'Offset X',\n    yOffset: 'Offset Y',\n    lineWidth: 'Lățime linie',\n    normal: 'Normal',\n    bold: 'Bold',\n    italic: 'Italic',\n    boldItalic: 'Bold Italic',\n    fillOpacity: 'Opacitate Fill',\n    strokeOpacity: 'Opacitate Linie',\n    columnGroup: 'Coloană',\n    barGroup: 'Bară',\n    pieGroup: 'Plăcintă',\n    lineGroup: 'Linie',\n    scatterGroup: 'Dispersie',\n    areaGroup: 'Suprafață',\n    groupedColumnTooltip: 'Grupat',\n    stackedColumnTooltip: 'Stivuit',\n    normalizedColumnTooltip: 'Stivuit 100%',\n    groupedBarTooltip: 'Grupat',\n    stackedBarTooltip: 'Stivuit',\n    normalizedBarTooltip: 'Stivuit 100%',\n    pieTooltip: 'Plăcintă',\n    doughnutTooltip: 'Gogoașă',\n    lineTooltip: 'Linie',\n    groupedAreaTooltip: 'Grupat',\n    stackedAreaTooltip: 'Stivuit',\n    normalizedAreaTooltip: 'Stivuit 100%',\n    scatterTooltip: 'Dispersie',\n    bubbleTooltip: 'Bule',\n    noDataToChart: 'Nu există date disponibile pentru a fi incluse în grafic.',\n    pivotChartRequiresPivotMode: 'Graficul pivot necesită activarea modului pivot.'\n}","import { MegakillCommonModuleConfig } from './config';\nimport { Injectable, Optional } from '@angular/core';\nimport createAuth0Client, { GetTokenSilentlyVerboseResponse, Auth0Client } from '@auth0/auth0-spa-js';\nimport { from, of, Observable, BehaviorSubject, combineLatest, throwError } from 'rxjs';\nimport { tap, catchError, concatMap, shareReplay } from 'rxjs/operators';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  // Create an observable of Auth0 instance of client\n  auth0Client$ = (from(\n    createAuth0Client({\n      domain: this.config?.auth.domain,\n      client_id: this.config?.auth.client_id,\n      redirect_uri: `${window.location.origin}/manage/callback`,\n      audience: this.config?.auth.audience\n    })\n  ) as Observable<Auth0Client>).pipe(\n    shareReplay(1), // Every subscription receives the same shared value\n    catchError(err => throwError(err))\n  );\n  // Define observables for SDK methods that return promises by default\n  // For each Auth0 SDK method, first ensure the client instance is ready\n  // concatMap: Using the client instance, call SDK method; SDK returns a promise\n  // from: Convert that resulting promise into an observable\n  isAuthenticated$ = this.auth0Client$.pipe(\n    concatMap((client: Auth0Client) => from(client.isAuthenticated())),\n    tap(res => this.loggedIn = res)\n  );\n  handleRedirectCallback$ = this.auth0Client$.pipe(\n    concatMap((client: Auth0Client) => from(client.handleRedirectCallback()))\n  );\n  // Create subject and public observable of user profile data\n  private userProfileSubject$ = new BehaviorSubject<any>(null);\n  userProfile$ = this.userProfileSubject$.asObservable();\n  // Create a local property for login status\n  loggedIn: boolean = false;\n\n  constructor(\n    private router: Router,\n    @Optional() private config?: MegakillCommonModuleConfig\n  ) { }\n\n  // When calling, options can be passed if desired\n  // https://auth0.github.io/auth0-spa-js/classes/auth0client.html#getuser\n  getUser$(options?: any): Observable<any> {\n    return this.auth0Client$.pipe(\n      concatMap((client: Auth0Client) => from(client.getUser(options))),\n      tap(user => this.userProfileSubject$.next(user))\n    );\n  }\n\n  localAuthSetup() {\n    // This should only be called on app initialization\n    // Set up local authentication streams\n    const checkAuth$ = this.isAuthenticated$.pipe(\n      concatMap((loggedIn: boolean) => {\n        if (loggedIn) {\n          // If authenticated, get user and set in app\n          // NOTE: you could pass options here if needed\n          return this.getUser$();\n        }\n        // If not authenticated, return stream that emits 'false'\n        return of(loggedIn);\n      })\n    );\n    checkAuth$.subscribe((response: { [key: string]: any } | boolean) => {\n      // If authenticated, response will be user object\n      // If not authenticated, response will be 'false'\n      this.loggedIn = !!response;\n    });\n  }\n\n  login(redirectPath: string = '/') {\n    // A desired redirect path can be passed to login method\n    // (e.g., from a route guard)\n    // Ensure Auth0 client instance exists\n    this.auth0Client$.subscribe((client: Auth0Client) => {\n      // Call method to log in\n      client.loginWithRedirect({\n        redirect_uri: `${window.location.origin}/manage/callback`,\n        appState: { target: redirectPath }\n      });\n    });\n  }\n\n  handleAuthCallback() {\n    // Only the callback component should call this method\n    // Call when app reloads after user logs in with Auth0\n    let targetRoute: string; // Path to redirect to after login processsed\n    const authComplete$ = this.handleRedirectCallback$.pipe(\n      // Have client, now call method to handle auth callback redirect\n      tap(cbRes => {\n        // Get and set target redirect route from callback results\n        targetRoute = cbRes.appState && cbRes.appState.target ? cbRes.appState.target : '/';\n      }),\n      concatMap(() => {\n        // Redirect callback complete; get user and login status\n        return combineLatest(\n          this.getUser$(),\n          this.isAuthenticated$\n        );\n      })\n    );\n    // Subscribe to authentication completion observable\n    // Response will be an array of user and login status\n    authComplete$.subscribe(([user, loggedIn]) => {\n      // Redirect to target route after callback processing\n      this.router.navigate([targetRoute]);\n    });\n  }\n\n  getTokenSilently$(options?: any): Observable<GetTokenSilentlyVerboseResponse> {\n    return this.auth0Client$.pipe(\n      concatMap((client: Auth0Client) => from(client.getTokenSilently(options)))\n    );\n  }\n\n  logout() {\n    // Ensure Auth0 client instance exists\n    this.auth0Client$.subscribe((client: Auth0Client) => {\n      // Call method to log out\n      client.logout({\n        client_id: this.config?.auth.client_id,\n        returnTo: `${window.location.origin}`\n      });\n    });\n  }\n}\n","import { AuthService } from './../../auth.service';\nimport { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'megakill-callback',\n  templateUrl: './callback.component.html'\n})\nexport class CallbackComponent implements OnInit {\n  constructor(\n    private authService: AuthService\n  ) { }\n\n  ngOnInit() {\n    this.authService.handleAuthCallback();\n  }\n}","","import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(private auth: AuthService) {}\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean|UrlTree> {\n    return this.auth.isAuthenticated$.pipe(\n      tap(loggedIn => {\n        if (!loggedIn) {\n          this.auth.login(state.url);\n        }\n      })\n    );\n  }\n\n}\n","import { Component } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { DialogService } from '../../dialog.service';\n\n@Component({\n  selector: 'megakill-actions-renderer',\n  templateUrl: './actions-renderer.component.html'\n})\n\nexport class ActionsRenderer implements ICellRendererAngularComp {\n  public params: any;\n\n  constructor(private dialogService: DialogService) { }\n\n  agInit(params: any): void {\n    this.params = params;\n  }\n\n  public edit() {\n    this.params.context.componentParent.edit(this.params.data);\n  }\n\n  public delete() {\n    this.params.context.componentParent.delete(this.params.data);\n  }\n\n  showHistory() {\n    const dialogRef = this.dialogService.openOkPortalDialog({\n      title: 'Istoric',\n      component: this.params.context.componentParent.historyDialogComponentType,\n      componentData: {\n        id: this.params.data._id\n      }\n    });\n\n    return dialogRef;\n  }\n\n  refreshParent() {\n    this.params.context.componentParent.getData();\n  }\n\n  refresh(): boolean {\n    return false;\n  }\n}\n","<button mat-icon-button (click)=\"edit()\" matTooltip=\"Editează\" color=\"primary\">\n  <!-- TO DO: replace mat-icon with svgs -->\n  <!-- <mat-icon>edit</mat-icon> -->\n  <!-- TO DO: i18n (temp) -->\n  Editează\n</button>\n<button mat-icon-button (click)=\"delete()\" matTooltip=\"Șterge\" color=\"accent\">\n  <!-- TO DO: replace mat-icon with svgs -->\n  <!-- <mat-icon>delete</mat-icon> -->\n  <!-- TO DO: i18n (temp) -->\n  Șterge\n</button>\n<!-- TO DO: i18n -->\n<button mat-icon-button (click)=\"showHistory()\" matTooltip=\"Vezi istoricul\">\n  <!-- TO DO: replace mat-icon with svgs -->\n  <!-- <mat-icon>history</mat-icon> -->\n  <!-- TO DO: i18n (temp)-->\n  Istoric\n</button>\n","import { Component, OnInit } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\n\n@Component({\n  selector: 'megakill-boolean-renderer',\n  templateUrl: './boolean-renderer.component.html',\n  styleUrls: ['./boolean-renderer.component.scss']\n})\n\nexport class BooleanRenderer implements ICellRendererAngularComp  {\n  public params: any;\n\n  agInit(params: any): void {\n    this.params = params;\n  }\n\n  refresh(): boolean {\n    return false;\n  }\n}\n","<!-- TO DO: i18n -->\n{{ params.value ? 'Da' : 'Nu' }}\n<!-- TO DO: replace icon with SVG -->\n<!-- <mat-icon *ngIf=\"params.value === true\" style=\"margin-top: 10px\">check</mat-icon> -->\n<!-- TO DO: replace icon with SVG -->\n<!-- <mat-icon *ngIf=\"params.value === false\" style=\"margin-top: 10px\">clear</mat-icon> -->","import { Component } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { S3Service } from '../../s3.service';\n\n@Component({\n  selector: 'megakill-download-renderer',\n  templateUrl: './download-renderer.component.html',\n  styleUrls: ['./download-renderer.component.scss']\n})\nexport class DownloadRenderer implements ICellRendererAngularComp  {\n  constructor (\n    private s3Service: S3Service\n  ) {}\n\n  public params: any;\n\n  agInit(params: any): void {\n    this.params = params;\n  }\n\n  refresh(): boolean {\n    return false;\n  }\n\n  download() {\n    return this.s3Service.download(this.params.value);\n  }\n}\n","<!-- TO DO: replace mat-icon with svgs -->\n\n<div color=\"primary\" (click)=\"download()\" *ngIf=\"params.value\" class=\"download\">\n    <!-- TO DO: replace mat-icon with svgs -->\n    <!-- <mat-icon>get_app</mat-icon> -->\n    <!-- TO DO: i18n -->\n    <span>DESCARCĂ</span>\n</div>\n\n<!-- TO DO: i18n -->\n<div *ngIf=\"!params.value\" class=\"no-file\" matTooltip=\"Editează documentul pentru a putea încărca un fișier.\">\n    <!-- TO DO: replace mat-icon with svgs -->\n    <!-- <mat-icon>clear</mat-icon> -->\n    <!-- TO DO: i18n -->\n    <span>Niciun fișier asociat.</span>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { LocalFilesService } from '../../local-files.service';\n\n@Component({\n  selector: 'appointments-solution-local-download-renderer',\n  templateUrl: './local-download-renderer.component.html',\n  styleUrls: ['./local-download-renderer.component.scss']\n})\nexport class LocalDownloadRenderer implements ICellRendererAngularComp  {\n  constructor (\n    private localFilesService: LocalFilesService\n  ) {}\n\n  public params: any;\n\n  agInit(params: any): void {\n    this.params = params;\n  }\n\n  refresh(): boolean {\n    return false;\n  }\n\n  download() {\n    return this.localFilesService.download(this.params.value);\n  }\n}\n","<div color=\"primary\" (click)=\"download()\" *ngIf=\"params.value\" class=\"download\">\n    <!-- TO DO: replace icon with SVG -->\n    <!-- <mat-icon>get_app</mat-icon> -->\n    <!-- TO DO: i18n -->\n    <span>DESCARCĂ</span>\n</div>\n<div *ngIf=\"!params.value\" class=\"no-file\" matTooltip=\"Editează documentul pentru a putea încărca un fișier.\">\n    <!-- TO DO: replace icon with SVG -->\n    <!-- <mat-icon>clear</mat-icon> -->\n    <!-- TO DO: i18n -->\n    <span>Niciun fișier asociat.</span>\n</div>","import { Component } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { LocalFilesService } from '../../local-files.service';\n\n@Component({\n  selector: 'megakill-local-photo-renderer',\n  templateUrl: './local-photo-renderer.component.html',\n  styleUrls: ['./local-photo-renderer.component.scss']\n})\nexport class LocalPhotoRenderer implements ICellRendererAngularComp  {\n  constructor (\n    private localFilesService: LocalFilesService\n  ) {}\n\n  public params: any;\n\n  agInit(params: any): void {\n    this.params = params;\n  }\n\n  refresh(): boolean {\n    return false;\n  }\n\n  download() {\n    return this.localFilesService.download(this.params.value);\n  }\n}\n","<div color=\"primary\" (click)=\"download()\" *ngIf=\"params.value\" class=\"download\">\n    <!-- TO DO: replace icon with SVG -->\n    <!-- <mat-icon>visibility</mat-icon> -->\n    <!-- TO DO: i18n -->\n    <span>VIZUALIZEAZĂ FOTOGRAFIA</span>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { S3Service } from '../../s3.service';\n\n@Component({\n  selector: 'appointments-solution-s3-download-renderer',\n  templateUrl: './s3-download-renderer.component.html',\n  styleUrls: ['./s3-download-renderer.component.scss']\n})\nexport class S3DownloadRenderer implements ICellRendererAngularComp  {\n  constructor (\n    private s3Service: S3Service\n  ) {}\n\n  public params: any;\n\n  agInit(params: any): void {\n    this.params = params;\n  }\n\n  refresh(): boolean {\n    return false;\n  }\n\n  download() {\n    return this.s3Service.download(this.params.value);\n  }\n}\n","<div color=\"primary\" (click)=\"download()\" *ngIf=\"params.value\" class=\"download\">\n    <!-- TO DO: replace icon with SVG -->\n    <!-- <mat-icon>get_app</mat-icon> -->\n    <!-- TO DO: i18n -->\n    <span>DESCARCĂ</span>\n</div>\n<div *ngIf=\"!params.value\" class=\"no-file\" matTooltip=\"Editează documentul pentru a putea încărca un fișier.\">\n    <!-- TO DO: replace icon with SVG -->\n    <!-- <mat-icon>clear</mat-icon> -->\n    <!-- TO DO: i18n -->\n    <span>Niciun fișier asociat.</span>\n</div>","import { Component } from '@angular/core';\nimport { ICellRendererAngularComp } from 'ag-grid-angular';\nimport { S3Service } from '../../s3.service';\n\n@Component({\n  selector: 'megakill-s3-photo-renderer',\n  templateUrl: './s3-photo-renderer.component.html',\n  styleUrls: ['./s3-photo-renderer.component.scss']\n})\nexport class S3PhotoRenderer implements ICellRendererAngularComp  {\n  constructor (\n    private s3Service: S3Service\n  ) {}\n\n  public params: any;\n\n  agInit(params: any): void {\n    this.params = params;\n  }\n\n  refresh(): boolean {\n    return false;\n  }\n\n  download() {\n    return this.s3Service.download(this.params.value);\n  }\n}\n","<div color=\"primary\" (click)=\"download()\" *ngIf=\"params.value\" class=\"download\">\n    <!-- TO DO: replace icon with SVG -->\n    <!-- <mat-icon>visibility</mat-icon> -->\n    <!-- TO DO: i18n -->\n    <span>VIZUALIZEAZĂ FOTOGRAFIA</span>\n</div>","/*\n * Public API Surface of common\n */\n\nexport * from './lib/dialog.service';\nexport * from './lib/formatter.service';\nexport * from './lib/local-files.service';\nexport * from './lib/csv.service';\nexport * from './lib/s3.service';\nexport * from './lib/common.module';\nexport * from './lib/ro-date-formats.constant';\nexport * from './lib/ag-grid-locale-text-ro.constant';\nexport * from './lib/auth/callback/callback.component';\nexport * from './lib/injection-tokens';\nexport * from './lib/auth.guard';\nexport * from './lib/auth.service';\nexport * from './lib/renderers/actions-renderer/actions-renderer.component';\nexport * from './lib/renderers/boolean-renderer/boolean-renderer.component';\nexport * from './lib/renderers/download-renderer/download-renderer.component';\nexport * from './lib/renderers/local-download-renderer/local-download-renderer.component';\nexport * from './lib/renderers/local-photo-renderer/local-photo-renderer.component';\nexport * from './lib/renderers/s3-download-renderer/s3-download-renderer.component';\nexport * from './lib/renderers/s3-photo-renderer/s3-photo-renderer.component';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2.MegakillCommonModuleConfig","i1.AuthService","i1.DialogService","i1.S3Service","i1.LocalFilesService"],"mappings":"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"}